package com.nokia.exercises.todo.rest;

import java.util.HashMap;
import java.util.List;
import java.util.Set;

import javax.ws.rs.core.GenericEntity;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.Status;

import com.nokia.exercises.todo.api.Todo;
import com.nokia.exercises.todo.api.TodoService;

public class TodoRestServiceImplementation implements TodoRestService{
	public int autoGeneratedTodoId = 0;
	private TodoService todoService;
	
	public TodoService getTodoService() {
		return todoService;
	}


	public void setTodoService(TodoService todoService) {
		this.todoService = todoService;
	}


	public Set<Todo> handleGet() {
		return todoService.getTodos();
	}


	public Response handleGetWithTodoId(Integer todoId) {
		if(todoService.getTodoWithId(todoId) != null){
			return Response.status(Status.OK).entity(todoService.getTodoWithId(todoId)).build();
		}else{
			return Response.status(Status.NOT_FOUND).build();
		}
	}

	public Response handlePost(Todo[] todoList) {
		if(todoList.length != 0){
			for(Todo todo : todoList){
				Todo newTodo = new Todo();
				newTodo.setTodoId(generateTodoId());
				//newTodo.setTodoId(todo.getTodoId());
				newTodo.setTodoName(todo.getTodoName());
				newTodo.setTodoDescription(todo.getTodoDescription());
				newTodo.setTodoStatus(todo.getTodoStatus());
				todoService.addTodo(newTodo);       
			}
			return Response.status(Status.CREATED).build();
			
		}else{
			return Response.status(Status.UNSUPPORTED_MEDIA_TYPE).entity("Empty Input").build();
		}
	}

	
	public Response handleDelete() {
		if(todoService.removelAllTodos()){
			autoGeneratedTodoId = 0;
			return Response.status(Status.OK).build();
		}else{
			return Response.status(Status.NOT_FOUND).build();
		}
	}

	
	public Response handleDeleteWithTodoId(Integer todoId) {
		if(todoService.removeTodoWithId(todoId)){
			return Response.status(Status.OK).build();
		}else{
			return Response.status(Status.NOT_FOUND).build();
		}
	}

	
	public Response handlePut(Todo todo) {
		if(todoService.updateTodo(todo)){
			return Response.status(Status.OK).build();
		}else{
			return Response.status(Status.NOT_FOUND).build();
		}
	}

	
	public int generateTodoId(){
		return ++autoGeneratedTodoId;
	}
	/*public Response handlePutToUpdateStatus(Integer todoId, Todo todo) {
		return todoService.updateTodoStatus(todoId, todo);
	}*/
	
}
